Trigger 
 
For Inserting in Event_Venue â€“ Capacity Check 

DELIMITER $$ 
CREATE TRIGGER insert_event_venue BEFORE INSERT ON event_venue
BEGIN
DECLARE tot_cap INT;
SELECT capacity from venue where venue_id = NEW.venue_id INTO tot_cap;
SET NEW.available_seats = tot_cap;
END; //
 
DELIMITER ;;

 
Procedures
 
1. CANCELLATION

CREATE DEFINER=`root`@`localhost` PROCEDURE `cancellation_transaction`(`bookingid` INT)
MODIFIES SQL DATA
BEGIN
DECLARE eventvenueid INT;
DECLARE number_of_tkts INT;
DECLARE exit handler for sqlexception,SQLWARNING
BEGIN
    -- ERROR
ROLLBACK;
END;
SELECT ev_id from booking where booking_id = bookingid INTO eventvenueid;
SELECT number_of_tickets from booking where booking_id = bookingid INTO number_of_tkts;
START TRANSACTION;
UPDATE booking set booking_flag = 0 where booking_id = bookingid;
UPDATE event_venue set available_seats = available_seats + number_of_tkts where ev_id =
eventvenueid; 
COMMIT;
SELECT 'BOOKING CANCELLED SUCCESSFULLY';
END
 
2. BOOKING

CREATE DEFINER=`root`@`localhost` PROCEDURE `booking_transaction1`(IN `evid` INT, IN
`customerid` INT, IN `numtkts` INT)
    MODIFIES SQL DATA
  exe: BEGIN
  DECLARE totalcost FLOAT;
  DECLARE cost FLOAT;
  DECLARE available_now INT;
 DECLARE exit handler for sqlexception,SQLWARNING
  BEGIN
    -- ERROR
  ROLLBACK;
END; 
 SELECT count(price) from event_venue where ev_id = evid INTO cost;
  IF cost <> 1
  THEN SELECT 'INVALID EVENT ID';
  LEAVE exe;
 END IF;
 
 SELECT available_seats from event_venue where ev_id = evid into available_now;
 IF available_now = 0 THEN
 SELECT 'SORRY!! WE ARE SOLD OUT :(';
 LEAVE exe;
 END IF;

 IF available_now < numtkts THEN
 SELECT 'ENOUGH TICKETS NOT AVILABLE. PLEASE TRY BOOKING LESS NUMBER OF
TICKETS';
 LEAVE exe;
 END IF;
 
 SELECT price from event_venue where ev_id = evid INTO cost;
  SET totalcost = cost*numtkts;
     
START TRANSACTION;
INSERT INTO booking (ev_id, customer_id,number_of_tickets,price,booking_flag) values (evid,
customerid, numtkts, totalcost, 1);
IF ROW_COUNT() = 1 THEN
  UPDATE event_venue set available_seats = available_seats - numtkts where ev_id = evid;
  IF ROW_COUNT() = 1 THEN
  SELECT 'BOOKING SUCCESSFUL' ;
  ELSE
  SELECT 0 ;
  END IF;
  ELSE
  SELECT 0 ;
  END IF;
  COMMIT;
  END
